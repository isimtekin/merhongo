name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017

    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.5'  # Specific version that matches your go.mod

      - name: Check out code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: go mod download

      - name: Check formatting
        run: |
          if [ "$(gofmt -l . | wc -l)" -gt 0 ]; then
            echo "The following files are not formatted properly:"
            gofmt -l .
            exit 1
          fi

      - name: Run tests
        run: go test -v -coverprofile=coverage.out ./...

      - name: Calculate coverage
        run: go tool cover -func=coverage.out

      - name: Upload coverage report
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.out
          fail_ci_if_error: false

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.5'  # Specific version that matches your go.mod

      - name: Check out code
        uses: actions/checkout@v3

      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.53.3

      - name: Run golangci-lint
        run: golangci-lint run
        continue-on-error: true  # This will allow the workflow to continue even if linting fails

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [test]  # Only depend on test, not lint
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.5'  # Specific version that matches your go.mod

      - name: Check out code
        uses: actions/checkout@v3

      - name: Build
        run: go build -v ./...